{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar _ = function _(el) {\n  return document.querySelector(el);\n}; // theme colors\n\n\nvar colors = {\n  simple: ['#000000', '#FFFFFF', '#888888'],\n  vine: ['#A4193D', '#FFDFB9', '#3333333'],\n  green: ['#2BAE66', '#FCF6F5', '#3333333'],\n  red: ['#990011', '#FCF6F5', '#3333333']\n}; // Generate random theme colors\n\nvar randomColors = function randomColors() {\n  // create array colors names\n  var arr = [];\n\n  for (var color in colors) {\n    arr.push(color);\n  } // random array\n\n\n  var rand = arr[Math.floor(Math.random() * arr.length)],\n      color1 = colors[rand][0],\n      color2 = colors[rand][1],\n      color3 = colors[rand][2];\n  console.log(\"Name of color is \".concat(rand)); // set property on :root css\n\n  document.documentElement.style.setProperty('--dark', color1);\n  document.documentElement.style.setProperty('--light', color2);\n  document.documentElement.style.setProperty('--txt', color3);\n};\n\nvar toogleNavigation = function toogleNavigation() {\n  _('.header').classList.toggle('active');\n\n  _('.content').classList.toggle('active');\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  _('.btn-menu').addEventListener('click', toogleNavigation);\n\n  _('.btn-close').addEventListener('click', toogleNavigation);\n\n  randomColors(); // simple lightbox\n\n  var img = document.querySelectorAll('.zoom');\n  Array.from(img).map(function (item) {\n    return handleImages(item);\n  });\n}); // handle images\n\nfunction handleImages(item, index) {\n  item.addEventListener('click', function (evt) {\n    createLightbox({\n      src: evt.target.src,\n      alt: evt.target.alt ? evt.target.alt : 'Unsplash'\n    });\n  });\n} // create lightbox\n\n\nfunction createLightbox(args) {\n  document.body.style.overflow = 'hidden';\n  var lightbox = createElement('section', document.body, {\n    className: 'lightbox'\n  }),\n      lightboxBody = createElement('article', lightbox, {\n    className: 'lightbox-body'\n  }),\n      image = createElement('img', lightboxBody, {\n    src: args.src\n  });\n  lightboxBody.addEventListener('click', function (evt) {\n    evt.preventDefault();\n    document.body.style.overflow = 'inherit';\n    document.body.removeChild(lightbox);\n  });\n} // create elements\n\n\nfunction createElement(element, where, args) {\n  var d = document.createElement(element);\n  if (args) for (var _i = 0, _Object$entries = Object.entries(args); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        k = _Object$entries$_i[0],\n        v = _Object$entries$_i[1];\n\n    d[k] = v;\n  }\n  where.appendChild(d);\n  return d;\n}"],"file":"index.js"}